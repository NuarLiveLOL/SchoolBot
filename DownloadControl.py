import os
import time
import shutil
import string

# –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫
BLOCKED_KEYWORDS = ["this", "next"]

# –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è —É–¥–∞–ª—è—Ç—å
EXCLUDED_FOLDERS = [
    "System Volume Information",
    "$Recycle.Bin",
    "Windows",
    "Microsoft",
    "Common Files",
    "ProgramData",
    "Users"
]

def get_all_drives():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∏—Å–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ."""
    drives = []
    for letter in string.ascii_uppercase:  # A-Z
        path = f"{letter}:/"
        if os.path.exists(path):
            drives.append(path)
    return drives

def delete_forbidden_items():
    """–£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏ —Å –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –Ω–∞ –≤—Å–µ—Ö –¥–∏—Å–∫–∞—Ö."""
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–∏—Å–∫–æ–≤ + "–ó–∞–≥—Ä—É–∑–∫–∏"
    drives = get_all_drives()
    downloads_path = os.path.join(os.path.expanduser("~"), "Downloads")
    check_paths = [downloads_path] + drives

    for path in check_paths:
        if not os.path.exists(path):
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –ø—É—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

        for item_name in os.listdir(path):
            lower_name = item_name.lower()  # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
            item_path = os.path.join(path, item_name)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
            if any(keyword in lower_name for keyword in BLOCKED_KEYWORDS):
                try:
                    if os.path.isfile(item_path) or os.path.islink(item_path):
                        os.remove(item_path)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
                        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {item_name} –∏–∑ {path}")

                    elif os.path.isdir(item_path):
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–ø–∫–∏
                        if item_name in EXCLUDED_FOLDERS:
                            print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –ø–∞–ø–∫–∞: {item_name}")
                            continue

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –ø–∞–ø–∫–∏
                        if any(keyword in lower_name for keyword in BLOCKED_KEYWORDS):
                            shutil.rmtree(item_path)  # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É –∏ –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                            print(f"üóÇÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {item_name} –∏–∑ {path}")

                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {item_name}: {e}")

if __name__ == "__main__":
    print("üîç –ó–∞–ø—É—â–µ–Ω –∫–æ–Ω—Ç—Ä–æ–ª—å —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –Ω–∞ –≤—Å–µ—Ö –¥–∏—Å–∫–∞—Ö...")
    while True:
        delete_forbidden_items()
        time.sleep(5)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
